data = readr::read_csv('WAGES_PSID1976-1982_IDs.csv')
library(tidyverse)
data_demean = data %>% mutate(EXP2 = EXP^2) %>%
group_by(ID) %>%
mutate_all(funs(.-mean(.)))
reg = lm(LWAGE ~ -1 + EXP + EXP2 + UNION + WKS + MS + OCC + SOUTH + SMSA + IND + BLK + FEM + ED, data = data_demean)
summary(reg)
reg
# Importing useful packages
library(dplyr)
library(plm)
raw_df <- read.csv("WAGES_PSID1976-1982_IDs.csv")
# Creating EXP2 variable, adding it to the dataframe and selecting variables of interest:
df <- raw_df %>% mutate(EXP2 = EXP^2) %>% select(ID, EXP, EXP2, UNION, WKS, MS, OCC, SOUTH, SMSA, IND, BLK, FEM, LWAGE, ED)
# Creating EXP2 variable, adding it to the dataframe and selecting variables of interest:
df <- raw_df %>%
mutate(EXP2 = EXP^2) %>%
select(ID, EXP, EXP2, UNION, WKS, MS, OCC, SOUTH, SMSA, IND, BLK, FEM, LWAGE, ED)
# Creating EXP2 variable, adding it to the dataframe and selecting variables of interest:
df <- raw_df %>%
mutate(EXP2 = EXP^2) %>%
select(ID, EXP, EXP2, UNION, WKS, MS, OCC, SOUTH, SMSA, IND, BLK, FEM, LWAGE, ED)
df_ISM <- df %>% group_by(ID) %>% summarise(across(everything(), list(mean)))
df_ISM_repeated_rows <- df_ISM %>% slice(rep(1:n(), each = 7))
# Generating the within-transformed data
df_within_transformed <- df - df_ISM_repeated_rows
# Estimating the model using least squares on the withing-transformed data.
# For simplicity, I will be using the 'lm' package here;
# but, of course, we could also compute the OLS estimator (X'X)^-1 X'y by hand.
within_estimation <- lm(LWAGE ~ EXP + EXP2 + UNION + WKS + MS + OCC + SOUTH + SMSA + IND + BLK + FEM + ED - 1, data = df_within_transformed)
within_estimation
within_estimation_check
# Checking results using the 'plm' package:
df_check <- raw_df %>%
mutate(EXP2 = EXP^2) %>%
select(ID, YEAR, EXP, EXP2, UNION, WKS, MS, OCC, SOUTH, SMSA, IND, BLK, FEM, LWAGE, ED)
within_estimation_check <- plm(LWAGE ~ EXP + EXP2 + UNION + WKS + MS + OCC + SOUTH + SMSA + IND + BLK + FEM + ED - 1, data = df_check, model = "within")
within_estimation_check
within_estimation
mean_data = df %>% mutate(EXP2 = EXP^2) %>%
group_by(ID) %>%
summarise(across(everything(), mean))
between_reg = lm(LWAGE ~ EXP + EXP2 + UNION + WKS + MS + OCC + SOUTH + SMSA + IND + BLK + FEM + ED, data = mean_data)
sigma_est = sqrt(1/(4165-595-10)*sum(reg$residuals^2))
sigma_bet_est = sqrt(1/595*sum(between_reg$residuals^2))
sigma_u_est = max(0, sigma_bet_est^2 - sigma_est^2/7)
rho = sigma_est/sqrt(sigma_est^2 + 7*sigma_u_est)
gls_data = data %>% mutate(EXP2 = EXP^2) %>%
group_by(ID) %>%
mutate_all(funs(. - (1-rho)*mean(.)))
gls_est = lm(LWAGE ~ EXP + EXP2 + UNION + WKS + MS + OCC + SOUTH + SMSA + IND + BLK + FEM + ED, data = gls_data)
summary(gls_est)
gls_est
random_effects_estimation <- plm(LWAGE ~ EXP + EXP2 + UNION + WKS + MS + OCC + SOUTH + SMSA + IND + BLK + FEM + ED, data = df_check, model = "random")
random_effects_estimation
summary(gls_est)
summary(random_effects_estimation)
h
within_coefficients <- within_estimation$coefficients[-c(10,11,12)]
re_coefficients <- c(random_effects_estimation$coefficients)[-1][-c(10,11,12)]
diff_coefficients <- within_coefficients - re_coefficients
var_betaFE <- vcov(within_estimation_check)
var_betaRE <- vcov(random_effects_estimation)[-1,][,-1][-10,][-10,][-10,][,-10][,-10][,-10]
diff_var <- var_betaFE - var_betaRE
h <- t(as.matrix(diff_coefficients)) %*% solve(diff_var) %*% as.matrix(diff_coefficients)
h
# Computing time specific means (TSMs):
df_TWFE <- raw_df %>% mutate(EXP2 = EXP^2) %>% select(ID, YEAR, EXP, EXP2, UNION, WKS, MS, OCC, SOUTH, SMSA, IND, BLK, FEM, LWAGE)
df_TSM <- df_TWFE %>% group_by(YEAR) %>% summarise(across(everything(), list(mean)))
df_TSM_repeated_rows <- do.call("rbind", replicate(595, df_TSM, simplify = FALSE)) %>% select(ID_1, EXP_1, EXP2_1, UNION_1, WKS_1, MS_1, OCC_1, SOUTH_1, SMSA_1, IND_1, BLK_1, FEM_1, LWAGE_1)
# Computing full means:
df_full_means <- data.frame(do.call("rbind", replicate(4165, t(data.frame("Means" = colMeans(df_TWFE))), simplify = FALSE))) %>% select(ID, EXP, EXP2, UNION, WKS, MS, OCC, SOUTH, SMSA, IND, BLK, FEM, LWAGE)
# Computing the transformed variables for TWFE estimation:
df_TWFE_transformed <- df - df_ISM_repeated_rows - df_TSM_repeated_rows + df_full_means
# Estimating by least squares:
TWFE_estimation <- lm(LWAGE ~ EXP + EXP2 + UNION + WKS + MS + OCC + SOUTH + SMSA + IND + BLK + FEM - 1, data = df_TWFE_transformed)
TWFE_estimation
# Estimating by least squares:
TWFE_estimation <- lm(LWAGE ~ EXP + EXP2 + UNION + WKS + MS + OCC + SOUTH + SMSA + IND + BLK + FEM - 1, data = df_TWFE_transformed)
# Computing the transformed variables for TWFE estimation:
df_TWFE_transformed <- df - df_ISM_repeated_rows - df_TSM_repeated_rows + df_full_means
# Computing time specific means (TSMs):
df_TWFE <- raw_df %>% mutate(EXP2 = EXP^2) %>% select(ID, YEAR, EXP, EXP2, UNION, WKS, MS, OCC, SOUTH, SMSA, IND, BLK, FEM, LWAGE)
df_TSM <- df_TWFE %>% group_by(YEAR) %>% summarise(across(everything(), list(mean)))
df_TSM_repeated_rows <- do.call("rbind", replicate(595, df_TSM, simplify = FALSE)) %>% select(ID_1, EXP_1, EXP2_1, UNION_1, WKS_1, MS_1, OCC_1, SOUTH_1, SMSA_1, IND_1, BLK_1, FEM_1, LWAGE_1)
# Computing full means:
df_full_means <- data.frame(do.call("rbind", replicate(4165, t(data.frame("Means" = colMeans(df_TWFE))), simplify = FALSE))) %>% select(ID, EXP, EXP2, UNION, WKS, MS, OCC, SOUTH, SMSA, IND, BLK, FEM, LWAGE)
# Computing the transformed variables for TWFE estimation:
df_TWFE_transformed <- df - df_ISM_repeated_rows - df_TSM_repeated_rows + df_full_means
length(df_ISM_repeated_rows)
length(df_TSM_repeated_rows)
View(df_TSM_repeated_rows)
View(df_ISM_repeated_rows)
df_TSM_repeated_rows <- do.call("rbind", replicate(595, df_TSM, simplify = FALSE)) %>% select(ID_1, EXP_1, EXP2_1, UNION_1, WKS_1, MS_1, OCC_1, SOUTH_1, SMSA_1, IND_1, BLK_1, FEM_1, LWAGE_1, ED_1)
# Computing full means:
df_full_means <- data.frame(do.call("rbind", replicate(4165, t(data.frame("Means" = colMeans(df_TWFE))), simplify = FALSE))) %>% select(ID, EXP, EXP2, UNION, WKS, MS, OCC, SOUTH, SMSA, IND, BLK, FEM, LWAGE)
# Computing the transformed variables for TWFE estimation:
df_TWFE_transformed <- df - df_ISM_repeated_rows - df_TSM_repeated_rows + df_full_means
# Estimating by least squares:
TWFE_estimation <- lm(LWAGE ~ EXP + EXP2 + UNION + WKS + MS + OCC + SOUTH + SMSA + IND + BLK + FEM - 1, data = df_TWFE_transformed)
TWFE_estimation
# Computing the transformed variables for TWFE estimation:
df_TWFE_transformed <- df - df_ISM_repeated_rows - df_TSM_repeated_rows + df_full_means
# Computing time specific means (TSMs):
df_TWFE <- raw_df %>% mutate(EXP2 = EXP^2) %>% select(ID, YEAR, EXP, EXP2, UNION, WKS, MS, OCC, SOUTH, SMSA, IND, BLK, FEM, LWAGE)
df_TSM <- df_TWFE %>% group_by(YEAR) %>% summarise(across(everything(), list(mean)))
df_TSM_repeated_rows <- do.call("rbind", replicate(595, df_TSM, simplify = FALSE)) %>% select(ID_1, EXP_1, EXP2_1, UNION_1, WKS_1, MS_1, OCC_1, SOUTH_1, SMSA_1, IND_1, BLK_1, FEM_1, LWAGE_1, ED_1)
# Computing time specific means (TSMs):
df_TWFE <- raw_df %>% mutate(EXP2 = EXP^2) %>% select(ID, YEAR, EXP, EXP2, UNION, WKS, MS, OCC, SOUTH, SMSA, IND, BLK, FEM, LWAGE, ED)
df_TSM <- df_TWFE %>% group_by(YEAR) %>% summarise(across(everything(), list(mean)))
df_TSM_repeated_rows <- do.call("rbind", replicate(595, df_TSM, simplify = FALSE)) %>% select(ID_1, EXP_1, EXP2_1, UNION_1, WKS_1, MS_1, OCC_1, SOUTH_1, SMSA_1, IND_1, BLK_1, FEM_1, LWAGE_1, ED_1)
# Computing full means:
df_full_means <- data.frame(do.call("rbind", replicate(4165, t(data.frame("Means" = colMeans(df_TWFE))), simplify = FALSE))) %>% select(ID, EXP, EXP2, UNION, WKS, MS, OCC, SOUTH, SMSA, IND, BLK, FEM, LWAGE)
# Computing the transformed variables for TWFE estimation:
df_TWFE_transformed <- df - df_ISM_repeated_rows - df_TSM_repeated_rows + df_full_means
# Computing full means:
df_full_means <- data.frame(do.call("rbind", replicate(4165, t(data.frame("Means" = colMeans(df_TWFE))), simplify = FALSE))) %>% select(ID, EXP, EXP2, UNION, WKS, MS, OCC, SOUTH, SMSA, IND, BLK, FEM, LWAGE, ED)
# Computing the transformed variables for TWFE estimation:
df_TWFE_transformed <- df - df_ISM_repeated_rows - df_TSM_repeated_rows + df_full_means
# Estimating by least squares:
TWFE_estimation <- lm(LWAGE ~ EXP + EXP2 + UNION + WKS + MS + OCC + SOUTH + SMSA + IND + BLK + FEM - 1, data = df_TWFE_transformed)
TWFE_estimation
summary(TWFE_estimation)
TWFE_estimation
TWFE_estimation_check <- plm(LWAGE ~ EXP + EXP2 + UNION + WKS + MS + OCC + SOUTH + SMSA + IND + BLK + FEM - 1, data = df_check, model = "within", effect = "twoways")
TWFE_estimation_check
data_time_mean = data %>% mutate(EXP2 = EXP^2) %>%
group_by(YEAR) %>%
summarise(across(everything(), mean))
data_time_mean_stack = purrr::map_dfr(seq_len(595), ~data_time_mean)
mean_data_stack = mean_data %>% slice(rep(1:n(), each = 7))
data_twoways = data_demean - data_time_mean_stack + mean_data_stack
twols = lm(LWAGE ~ -1 + EXP + EXP2 + UNION + WKS + MS + OCC + SOUTH + SMSA + IND + BLK + FEM + ED,
data = data_twoways)
data_twoways = data_demean - data_time_mean_stack + mean_data_stack
mean_data = data %>% mutate(EXP2 = EXP^2) %>%
group_by(ID) %>%
summarise(across(everything(), mean))
between_reg = lm(LWAGE ~ EXP + EXP2 + UNION + WKS + MS + OCC + SOUTH + SMSA + IND + BLK + FEM + ED, data = mean_data)
sigma_est = sqrt(1/(4165-595-10)*sum(reg$residuals^2))
sigma_bet_est = sqrt(1/595*sum(between_reg$residuals^2))
sigma_u_est = max(0, sigma_bet_est^2 - sigma_est^2/7)
rho = sigma_est/sqrt(sigma_est^2 + 7*sigma_u_est)
gls_data = data %>% mutate(EXP2 = EXP^2) %>%
group_by(ID) %>%
mutate_all(funs(. - (1-rho)*mean(.)))
gls_est = lm(LWAGE ~ EXP + EXP2 + UNION + WKS + MS + OCC + SOUTH + SMSA + IND + BLK + FEM + ED, data = gls_data)
summary(gls_est)
dif_coefs = reg$coefficients[1:9]-gls_est$coefficients[2:10]
t(dif_coefs) %*% solve(vcov(reg)[1:9, 1:9] - vcov(gls_est)[2:10, 2:10]) %*% dif_coefs
data_time_mean = data %>% mutate(EXP2 = EXP^2) %>%
group_by(YEAR) %>%
summarise(across(everything(), mean))
data_time_mean_stack = purrr::map_dfr(seq_len(595), ~data_time_mean)
mean_data_stack = mean_data %>% slice(rep(1:n(), each = 7))
data_twoways = data_demean - data_time_mean_stack + mean_data_stack
twols = lm(LWAGE ~ -1 + EXP + EXP2 + UNION + WKS + MS + OCC + SOUTH + SMSA + IND + BLK + FEM + ED,
data = data_twoways)
summary(twols)
twols
TWFE_estimation_check
install.packages(stargazer)
install.packages("stargazer")
stargazer(TWFE_estimation_check)
library(stargazer)
stargazer(TWFE_estimation_check)
# a)
stargazer(within_estimation_check)
# a)
stargazer(within_estimation_check, no.space=TRUE)
# a)
stargazer(within_estimation_check, random_effects_estimation, TWFE_estimation_check, no.space=TRUE)
View(raw_df)
View(raw_df)
View(raw_df)
within_estimation$coefficients
length(within_estimation$coefficients)
h_c <- qchisq(0.95, df=length(within_estimation$coefficients)) # Critical value for the test
h_c
h_c <- qchisq(0.95, df=length(within_coefficients)) # Critical value for the test
h_c
length(within_estimation$coefficients[-c(10,11,12)])
h_c <- qchisq(0.95, df=length(within_coefficients)) # Critical value for the test
length(within_coefficients)
h_c <- qchisq(0.95, df=length(within_coefficients)) # Critical value for the test
h_c
h
df_TSM
df_full_means
df_TSM_repeated_rows
df_ISM_repeated_rows - df_TSM_repeated_rows + df_full_means
random_effects_estimation
within_estimation_check
phtest(x=within_estimation_check, x2=random_effects_estimation, model=c(within, random))
# Checking using the 'plm' package:
h_test_plm <- phtest(x=within_estimation_check, x2=random_effects_estimation, model=c(within, random))
View(h_test_plm)
- df_ISM_repeated_rows - df_TSM_repeated_rows + df_full_means
View(df_TWFE_transformed)
View(- df_ISM_repeated_rows - df_TSM_repeated_rows + df_full_means)
- df_ISM_repeated_rows - df_TSM_repeated_rows + df_full_means
TWFE_estimation
within_estimation_check
re_coefficients
within_estimation_check
random_effects_estimation
TWFE_estimation_check
